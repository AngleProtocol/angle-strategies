// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.12;

import "./BaseTest.test.sol";
import { IEuler, IEulerMarkets, IEulerEToken, IEulerDToken } from "../../contracts/interfaces/external/euler/IEuler.sol";
import { IReserveInterestRateStrategy } from "../../contracts/interfaces/external/aave/IAave.sol";
import { IERC20 } from "@openzeppelin/contracts/token/ERC20/IERC20.sol";
import { GenericEuler } from "../../contracts/strategies/OptimizerAPR/genericLender/euler/GenericEuler.sol";

interface IBaseIRM {
    function baseRate() external view returns (uint256);

    function kink() external view returns (uint256);

    function slope1() external view returns (uint256);

    function slope2() external view returns (uint256);
}

contract DebugTest is BaseTest {
    using stdStorage for StdStorage;

    error Err();

    function setUp() public override {
        _ethereum = vm.createFork(vm.envString("ETH_NODE_URI_ETH_FOUNDRY"));
        vm.selectFork(_ethereum);

        super.setUp();
    }

    // ================================== DEPOSIT ==================================

    function testBorrow() public {
        address payable sender = payable(0xcC617C6f9725eACC993ac626C7efC6B96476916E);
        IERC20 asset = IERC20(0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48);
        address _contract = 0xa0062b7A5e494d569059E2f1A98B5f6C99BFAAfe;
        bytes
            memory data = hex"5cca04a400000000000000000000000000000000000000000000000000000000000000400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000c0000000000000000000000000000000000000000000000000000000000000024000000000000000000000000000000000000000000000000000000000000003c00000000000000000000000000000000000000000000000000000000000000460000000000000000000000000000000000000000000000000000000000000050000000000000000000000000000000000000000000000000000000000000005a00000000000000000000000005577f822a979b7456ca08c5e311067d777e734c40000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4ce5c7f61000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000270f0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000000000000bfa4459868c60da9edd835f0be684edec054557b0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e4ce5c7f61000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000003000000000000000000000000000000000000000000000000000000000000206a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006a6000000000000000000000000000000000000000000000000000000000000000000000000000000002d78b6f5dc8985d90145f27c8f5a3782eb9deb2e0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044641257d00000000000000000000000000000000000000000000000000000000000000000000000000000000c9daabc677f3d1301006e723bd21c60be57a591500000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000419106b6700000000000000000000000000000000000000000000000000000000000000000000000000000000e9f183fc656656f1f17af1f2b0df79b8ff9ad8ed00000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000419106b67000000000000000000000000000000000000000000000000000000000000000000000000000000006b4ee7352406707003bc6f6b96595fd35925af4800000000000000000000000000000000000000000000000000000000000000600000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000419106b6700000000000000000000000000000000000000000000000000000000";

        vm.prank(_GUARDIAN);
        GenericEuler(0xf5aD02F3DbBF4b42DEE1f1255607f929CA2a7c5a).emergencyWithdraw(1);
        vm.startPrank(sender);
        // asset.approve(_contract, type(uint256).max);

        (bool success, bytes memory result) = _contract.call(data);
        if (!success) revert Err();

        console.log("aave ", GenericEuler(0xe4377620697Be18E6d6aa911CA488571EeB3f081).nav());
        console.log("compound ", GenericEuler(0xE2773fB045e53De5344f245E03eA614AF1064Ce3).nav());
        console.log("euler ", GenericEuler(0xf5aD02F3DbBF4b42DEE1f1255607f929CA2a7c5a).nav());

        vm.stopPrank();
    }

    // function testAave() public {
    //     IReserveInterestRateStrategy ir = IReserveInterestRateStrategy(0x27182842E098f60e3D576794A5bFFb0777E025d3);
    //     console.log("baseRate ", ir.baseVariableBorrowRate());
    //     // console.log("kink ", ir.kink());
    //     console.log("slope1 ", ir.variableRateSlope1());
    //     console.log("slope2 ", ir.variableRateSlope1());
    // }
}
